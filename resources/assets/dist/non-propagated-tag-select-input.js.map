{"version":3,"file":"non-propagated-tag-select-input.js","mappings":"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","sources":["webpack:///./non-propagated-tag-select-input.js"],"sourcesContent":["/** global: Craft */\n/** global: Garnish */\n/**\n * Tag select input\n */\nCraft.NonPropagatedTagSelectInput = Craft.BaseElementSelectInput.extend(\n  {\n    searchTimeout: null,\n    searchMenu: null,\n\n    $container: null,\n    $elementsContainer: null,\n    $elements: null,\n    $addTagInput: null,\n    $spinner: null,\n\n    _ignoreBlur: false,\n\n    init: function (settings) {\n      // Normalize the settings\n      // ---------------------------------------------------------------------\n\n      // Are they still passing in a bunch of arguments?\n      if (!$.isPlainObject(settings)) {\n        // Loop through all of the old arguments and apply them to the settings\n        var normalizedSettings = {},\n          args = ['id', 'name', 'tagGroupId', 'siteId', 'sourceElementId'];\n\n        for (var i = 0; i < args.length; i++) {\n          if (typeof arguments[i] !== 'undefined') {\n            normalizedSettings[args[i]] = arguments[i];\n          } else {\n            break;\n          }\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        settings = normalizedSettings;\n      }\n\n      this.base($.extend({}, Craft.TagSelectInput.defaults, settings));\n\n      this.$addTagInput = this.$container.children('.add').children('.text');\n      this.$spinner = this.$addTagInput.next();\n\n      this.addListener(this.$addTagInput, 'input', () => {\n        if (this.searchTimeout) {\n          clearTimeout(this.searchTimeout);\n        }\n\n        this.searchTimeout = setTimeout(this.searchForTags.bind(this), 500);\n      });\n\n      this.addListener(this.$addTagInput, 'keydown', function (ev) {\n        if (ev.keyCode === Garnish.RETURN_KEY) {\n          ev.preventDefault();\n        }\n\n        switch (ev.keyCode) {\n          case Garnish.RETURN_KEY: {\n            ev.preventDefault();\n            if (this.searchMenu) {\n              this.selectTag(this.searchMenu.$options.filter('.hover'));\n            }\n            return;\n          }\n\n          case Garnish.DOWN_KEY: {\n            ev.preventDefault();\n            if (this.searchMenu) {\n              let $hoverOption = this.searchMenu.$options.filter('.hover');\n              if ($hoverOption.length) {\n                let $nextOption = $hoverOption\n                  .parent()\n                  .nextAll()\n                  .find('a:not(.disabled)')\n                  .first();\n                if ($nextOption.length) {\n                  this.focusOption($nextOption);\n                }\n              } else {\n                this.focusOption(this.searchMenu.$options.eq(0));\n              }\n            }\n            return;\n          }\n\n          case Garnish.UP_KEY: {\n            ev.preventDefault();\n            if (this.searchMenu) {\n              let $hoverOption = this.searchMenu.$options.filter('.hover');\n              if ($hoverOption.length) {\n                let $prevOption = $hoverOption\n                  .parent()\n                  .prevAll()\n                  .find('a:not(.disabled)')\n                  .last();\n                if ($prevOption.length) {\n                  this.focusOption($prevOption);\n                }\n              } else {\n                this.focusOption(\n                  this.searchMenu.$options.eq(\n                    this.searchMenu.$options.length - 1,\n                  ),\n                );\n              }\n            }\n            return;\n          }\n        }\n      });\n\n      this.addListener(this.$addTagInput, 'focus', function () {\n        if (this.searchMenu) {\n          this.searchMenu.show();\n        }\n      });\n\n      this.addListener(this.$addTagInput, 'blur', function () {\n        if (this._ignoreBlur) {\n          this._ignoreBlur = false;\n          return;\n        }\n\n        setTimeout(() => {\n          if (this.searchMenu) {\n            this.searchMenu.hide();\n          }\n        }, 1);\n      });\n    },\n\n    focusOption: function ($option) {\n      this.searchMenu.$options.removeClass('hover');\n      $option.addClass('hover');\n      this.searchMenu.$menuList.attr(\n        'aria-activedescendant',\n        $option.attr('id'),\n      );\n    },\n\n    // No \"add\" button\n    getAddElementsBtn: $.noop,\n\n    getElementSortAxis: function () {\n      return null;\n    },\n\n    searchForTags: function () {\n      if (this.searchMenu) {\n        this.killSearchMenu();\n      }\n\n      var val = this.$addTagInput.val();\n\n      if (val) {\n        this.$spinner.removeClass('hidden');\n\n        var excludeIds = [];\n\n        for (var i = 0; i < this.$elements.length; i++) {\n          var id = $(this.$elements[i]).data('id');\n\n          if (id) {\n            excludeIds.push(id);\n          }\n        }\n\n        // take allowSelfRelations into consideration too\n        if (\n          this.settings.sourceElementId &&\n          !this.settings.allowSelfRelations\n        ) {\n          excludeIds.push(this.settings.sourceElementId);\n        }\n\n        var data = {\n          search: this.$addTagInput.val(),\n          tagGroupId: this.settings.tagGroupId,\n          siteId: this.settings.siteId,\n          excludeIds: excludeIds,\n        };\n\n        Craft.sendActionRequest(\n          'POST',\n          'non-propagated-tags/input/search-for-tags',\n          { data },\n        )\n          .then((response) => {\n            if (this.searchMenu) {\n              this.killSearchMenu();\n            }\n            this.$spinner.addClass('hidden');\n            var $menu = $('<div class=\"menu tagmenu\"/>').appendTo(Garnish.$bod),\n              $ul = $('<ul/>').appendTo($menu);\n\n            var $li;\n\n            for (var i = 0; i < response.data.tags.length; i++) {\n              $li = $('<li/>').appendTo($ul);\n\n              $('<a data-icon=\"tag\"/>')\n                .appendTo($li)\n                .text(response.data.tags[i].title)\n                .data('id', response.data.tags[i].id)\n                .addClass(response.data.tags[i].exclude ? 'disabled' : '');\n            }\n\n            if (!response.data.exactMatch) {\n              $li = $('<li/>').appendTo($ul);\n              $('<a data-icon=\"plus\"/>').appendTo($li).text(data.search);\n            }\n\n            $ul.find('a:not(.disabled):first').addClass('hover');\n\n            this.searchMenu = new Garnish.Menu($menu, {\n              attachToElement: this.$addTagInput,\n              onOptionSelect: this.selectTag.bind(this),\n            });\n\n            this.addListener($menu, 'mousedown', () => {\n              this._ignoreBlur = true;\n            });\n\n            this.searchMenu.show();\n          })\n          .catch(() => {\n            // Just in case\n            if (this.searchMenu) {\n              this.killSearchMenu();\n            }\n\n            this.$spinner.addClass('hidden');\n          });\n      } else {\n        this.$spinner.addClass('hidden');\n      }\n    },\n\n    selectTag: function (option) {\n      var $option = $(option);\n\n      if ($option.hasClass('disabled')) {\n        return;\n      }\n\n      var id = $option.data('id');\n      var title = $option.text();\n\n      var $element = $('<div/>', {\n        class: 'element small removable',\n        'data-id': id,\n        'data-site-id': this.settings.siteId,\n        'data-label': title,\n        'data-editable': '1',\n      }).appendTo(this.$elementsContainer);\n\n      var $input = $('<input/>', {\n        type: 'hidden',\n        name: this.settings.name + '[]',\n        value: id,\n      }).appendTo($element);\n\n      $('<button/>', {\n        class: 'delete icon',\n        title: Craft.t('app', 'Remove'),\n        type: 'button',\n        'aria-label': Craft.t('app', 'Remove {label}', {\n          label: title,\n        }),\n      }).appendTo($element);\n\n      var $titleContainer = $('<div/>', {\n        class: 'label',\n      }).appendTo($element);\n\n      $('<span/>', {\n        class: 'title',\n        text: title,\n      }).appendTo($titleContainer);\n\n      this.$elements = this.$elements.add($element);\n\n      this.addElements($element);\n\n      this.killSearchMenu();\n      this.$addTagInput.val('');\n      this.$addTagInput.trigger('focus');\n\n      if (!id) {\n        // We need to create the tag first\n        $element.addClass('loading disabled');\n\n        var data = {\n          groupId: this.settings.tagGroupId,\n          siteId: this.settings.siteId,\n          title: title,\n        };\n\n        Craft.sendActionRequest(\n          'POST',\n          'non-propagated-tags/input/create-tag',\n          { data },\n        )\n          .then((response) => {\n            $element.attr('data-id', response.data.id);\n            $input.val(response.data.id);\n\n            $element.removeClass('loading disabled');\n          })\n          .catch(() => {\n            this.removeElement($element);\n            Craft.cp.displayError(Craft.t('app', 'A server error occurred.'));\n          });\n      }\n    },\n\n    killSearchMenu: function () {\n      this.searchMenu.hide();\n      this.searchMenu.destroy();\n      this.searchMenu = null;\n    },\n  },\n  {\n    defaults: {\n      tagGroupId: null,\n      siteId: null,\n    },\n  },\n);\n"],"names":["Craft","NonPropagatedTagSelectInput","BaseElementSelectInput","extend","searchTimeout","searchMenu","$container","$elementsContainer","$elements","$addTagInput","$spinner","_ignoreBlur","init","settings","$","isPlainObject","normalizedSettings","args","i","length","arguments","this","base","TagSelectInput","defaults","children","next","addListener","clearTimeout","setTimeout","searchForTags","bind","ev","keyCode","Garnish","RETURN_KEY","preventDefault","selectTag","$options","filter","DOWN_KEY","$hoverOption","$nextOption","parent","nextAll","find","first","focusOption","eq","UP_KEY","$prevOption","prevAll","last","show","hide","$option","removeClass","addClass","$menuList","attr","getAddElementsBtn","noop","getElementSortAxis","killSearchMenu","val","excludeIds","id","data","push","sourceElementId","allowSelfRelations","search","tagGroupId","siteId","sendActionRequest","then","response","$li","$menu","appendTo","$bod","$ul","tags","text","title","exclude","exactMatch","Menu","attachToElement","onOptionSelect","catch","option","hasClass","$element","class","$input","type","name","value","t","label","$titleContainer","add","addElements","trigger","groupId","removeElement","cp","displayError","destroy"],"sourceRoot":""}